import{r as d,p as o,q as r,w as s,B as l,P as n}from"./vendor.62143b15.js";const a=l("div",{class:"markdown-body"},[l("blockquote",null,[l("p",null,"Below is a listing of global error codes used within Directus, and what they mean.")]),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Error Code"),l("th",null,"HTTP Status"),l("th",null,"Description")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"FAILED_VALIDATION")]),l("td",null,"400"),l("td",null,"Validation for this particular item failed")]),l("tr",null,[l("td",null,[l("code",null,"FORBIDDEN")]),l("td",null,"403"),l("td",null,"You are not allowed to do the current action")]),l("tr",null,[l("td",null,[l("code",null,"INVALID_CREDENTIALS")]),l("td",null,"401"),l("td",null,"Username / password or access token is wrong")]),l("tr",null,[l("td",null,[l("code",null,"INVALID_IP")]),l("td",null,"401"),l("td",null,"Your IP address isn\u2019t allow-listed to be used with this user")]),l("tr",null,[l("td",null,[l("code",null,"INVALID_OTP")]),l("td",null,"401"),l("td",null,"Wrong OTP was provided")]),l("tr",null,[l("td",null,[l("code",null,"INVALID_PAYLOAD")]),l("td",null,"400"),l("td",null,"Provided payload is invalid")]),l("tr",null,[l("td",null,[l("code",null,"INVALID_QUERY")]),l("td",null,"400"),l("td",null,"The requested query parameters can not be used")]),l("tr",null,[l("td",null,[l("code",null,"REQUESTS_EXCEEDED")]),l("td",null,"429"),l("td",null,"Hit the rate limit")]),l("tr",null,[l("td",null,[l("code",null,"ROUTE_NOT_FOUND")]),l("td",null,"404"),l("td",null,"Endpoint does not exist")]),l("tr",null,[l("td",null,[l("code",null,"SERVICE_UNAVAILABLE")]),l("td",null,"503"),l("td",null,"Could not use external service")]),l("tr",null,[l("td",null,[l("code",null,"UNPROCESSABLE_ENTITY")]),l("td",null,"422"),l("td",null,"You tried doing something illegal")])])]),l("div",{class:"warning hint"},[l("div",{class:"hint-title"},"Security"),l("p",null,[n("To prevent leaking which items exist, all actions for non-existing items will return a "),l("code",null,"FORBIDDEN"),n(" error.")])])],-1),_={setup(i,{expose:e}){const t={title:"Error Codes",modularExtension:!1};return e({frontmatter:t}),(c,p)=>{const u=d("DocsWrapper");return o(),r(u,{frontmatter:t},{default:s(()=>[a]),_:1})}}};export{_ as default};
