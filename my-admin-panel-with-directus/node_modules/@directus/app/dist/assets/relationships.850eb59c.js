import{r as s,p as r,q as d,w as n,B as e,t as i,P as t}from"./vendor.62143b15.js";const h={class:"markdown-body"},u=e("blockquote",null,[e("p",null,[t("As you might have guessed, relationships are a crucial part of any relational database. Directus supports all standard relationship types, as well as a few more "),e("em",null,"compound"),t(" types that offer greater flexibility.")])],-1),m=e("p",null,"While it may seem complex at first, relational data is actually quite straightforward once you understand what\u2019s happening behind the confusing terminology. Before diving into the details of each type, let\u2019s first cover a few basics that will help you better visualize each in your mind\u2019s eye.",-1),p=e("h3",{id:"primary-and-foreign-keys"},[t("Primary and Foreign Keys "),e("a",{class:"header-anchor",href:"#primary-and-foreign-keys"},"#")],-1),_=t("Every "),y=t("Item"),f=t(" in a relational database has a unique \u201Ckey\u201D that identifies it within its "),g=t("Collection"),v=t(". Because it\u2019s required, the key is the first "),M=t("field"),b=t(" created within a collection, typically storing an \u201Cauto-increment\u201D number, an automatically generated unique hash, or a manually entered value. They are often abbreviated to \u201CPK\u201D (Primary Key), \u201CID\u201D (Identifier), \u201CUID\u201D (Unique Identifier), or \u201CUUID\u201D (Universally Unique Identifier), depending on the type of value they store. After it\u2019s created, the value of an item\u2019s PK should "),O=e("em",null,"never",-1),w=t(" change."),k=e("p",null,[t("To link items together relationally, you simply save a reference of an item\u2019s PK in a different field. That "),e("em",null,"reference"),t(" is called a Foreign Key (FK).")],-1),K=e("div",{class:"tip hint"},[e("div",{class:"hint-title"},"Compound Keys"),e("p",null,"To keep things simple, we\u2019ve ignored compound keys in the above explanation.")],-1),x=e("h3",{id:"perspective-matters"},[t("Perspective Matters "),e("a",{class:"header-anchor",href:"#perspective-matters"},"#")],-1),A=e("p",null,"Just like primary and foreign keys are directional, relationships are always relative to their \u201Cparent\u201D collection. Looking at the same relationship/key from the perspective of a different collection may change or reverse its type.",-1),P=e("h2",{id:"many-to-one-(m2o)"},[t("Many-to-One (M2O) "),e("a",{class:"header-anchor",href:"#many-to-one-(m2o)"},"#")],-1),T=e("p",null,[t("A Many-to-One (M2O) relationship exists on a field that saves a single FK. For example, a "),e("em",null,"city"),t(" can only be in one "),e("em",null,"country"),t(", but a "),e("em",null,"country"),t(" can have many "),e("em",null,"cities"),t(". So the M2O data model would look like this:")],-1),C=e("pre",null,[e("code",null,`cities ("Many" Collection)
- id (PK)
- name
- country (M2O that stores the FK to a country)

country ("One" Collection)
- id (PK, the value saved to "cities.country")
- name
`)],-1),q=e("h2",{id:"one-to-many-(o2m)"},[t("One-to-Many (O2M) "),e("a",{class:"header-anchor",href:"#one-to-many-(o2m)"},"#")],-1),F=e("p",null,[t("A One-to-Many (O2M) relationship uses an alias field to reference one or more FKs in a M2O. This is the "),e("em",null,"exact same"),t(" relationship as the M2O above, but looking at it from the opposite perspective (see "),e("a",{href:"#perspective-matters"},"Perspective Matters"),t("). So the O2M data model is the same, but adds an alias \u201Ccities\u201D field to the Country collection, like this:")],-1),I=e("pre",null,[e("code",null,`country ("One" Collection)
- id (PK, the value saved to "cities.country")
- name
- *cities* (O2M alias field that pulls in references from "cities.country")

cities ("Many" Collection)
- id (PK)
- name
- country (stores the FK to a country)
`)],-1),j=e("div",{class:"tip hint"},[e("div",{class:"hint-title"},"Manual Reordering"),e("p",null,[t("To enable manual reordering for a O2M, simply add a field with the "),e("code",null,"sort"),t(" type to the \u201Cmany\u201D side ("),e("code",null,"cities"),t(" in the above example).")])],-1),B={class:"tip hint"},D=e("div",{class:"hint-title"},"Translations",-1),S=t("The Translations interface allows "),U=t("creating multilingual content"),R=t(" relationally. It is a standard O2M relationship with an additional field on the \u201Cmany\u201D collection to hold the language key."),J=e("h2",{id:"many-to-many-(m2m)"},[t("Many-to-Many (M2M) "),e("a",{class:"header-anchor",href:"#many-to-many-(m2m)"},"#")],-1),N=e("p",null,[t("A Many-to-Many (M2M) relationship uses a \u201CJunction Table\u201D to connect many items from one collection, to many items of another collection. For example, a "),e("em",null,"recipe"),t(" can have many "),e("em",null,"ingredients"),t(", and "),e("em",null,"ingredients"),t(" can be in many "),e("em",null,"recipes"),t(". So the M2M data model would look like this:")],-1),E=e("pre",null,[e("code",null,`recipes (Collection)
- id (PK, the value saved to "recipe_ingredients.recipe")
- name
- *ingredients* (M2M/O2M alias field that pulls in references from recipe_ingredients)

ingredients (Collection)
- id (PK, the value saved to "recipe_ingredients.ingredient")
- name
- *recipes* (M2M/O2M alias field that pulls in references from recipe_ingredients)

recipe_ingredients (Junction Collection)
- id (PK)
- recipe (stores the FK to a recipe)
- ingredient (stores the FK to a ingredient)
- quantity
`)],-1),V=e("p",null,[t("Notice that the example above also has a "),e("code",null,"quantity"),t(" field on the junction table. You can add any contextual fields to the junction, and they will also be included in the App\u2019s relational edit form.")],-1),W=e("div",{class:"tip hint"},[e("div",{class:"hint-title"},"Actually just two O2Ms"),e("p",null,"An M2M is technically two relationships viewed as one. Each side has a O2M to the Junction Table that sits in the middle. In that sense, there really is no \u201CM2M\u201D.")],-1),Y={class:"tip hint"},H=e("div",{class:"hint-title"},"Manual Reordering",-1),z=t("To enable manual reordering for a M2M, simply add a numeric field to the junction table and set it as the "),L=t("Collection Sort"),G=t("."),Q=e("div",{class:"tip hint"},[e("div",{class:"hint-title"},"Self-Referencing"),e("p",null,[t("You can also have a M2M relationship that connects items within the "),e("em",null,"same"),t(" collection. As example of this is \u201CRelated Articles\u201D, where an article might relate to many other articles.")])],-1),X=e("h2",{id:"one-to-one-(o2o)"},[t("One-to-One (O2O) "),e("a",{class:"header-anchor",href:"#one-to-one-(o2o)"},"#")],-1),Z=t("Directus does not include a dedicated one-to-one (O2O) relationship type or interface. However, O2O is essentially the same as a M2O (storing a foreign key). The only difference is that a O2O enforces the cardinality. In other words, selecting a relational item in a O2O means that item can not be selected elsewhere (it can only be used once). This functionality can be added by checking and constraining uniqueness via a "),$=t("custom event hook"),ee=t(" or "),te=t("custom interface"),ne=t("."),oe=e("p",null,[t("An example of a O2O is: a "),e("em",null,"person"),t(" only has one unique set of "),e("em",null,"fingerprints"),t(", and those "),e("em",null,"fingerprints"),t(" only belong to one "),e("em",null,"person"),t(".")],-1),ie=e("h2",{id:"many-to-any-(m2a)"},[t("Many-to-Any (M2A) "),e("a",{class:"header-anchor",href:"#many-to-any-(m2a)"},"#")],-1),ae=e("p",null,[t("Sometimes called a \u201Cmatrix field\u201D or \u201Creplicator\u201D, the Many-to-Any (M2A) relationship is essentially the same as a M2M, but with one crucial difference: the junction table also stores the "),e("em",null,"parent collection name of the FK"),t(". This \u201Ccompound key\u201D combines the collection name and FK to provide a unique reference to "),e("em",null,"any"),t(" other item within the project. You can then artificially limit which collections are valid through an \u201Callow list\u201D.")],-1),se=e("p",null,[t("An example of a M2A is a \u201CPage Builder\u201D, which typically have different component Collections such as \u201CHeading\u201D, \u201CText Block\u201D, or \u201CMedia Asset\u201D, and a "),e("em",null,"Pages"),t(" collection on which you can add and arrange them. In this example the junction table will link a specific page with components from a number of different collections, allowing for the creation of relational page layouts.")],-1),he={setup(le,{expose:l}){const a={title:"Relationships",modularExtension:!1};return l({frontmatter:a}),(ce,re)=>{const o=s("router-link"),c=s("DocsWrapper");return r(),d(c,{frontmatter:a},{default:n(()=>[e("div",h,[u,m,p,e("p",null,[_,i(o,{to:"/docs/concepts/items/"},{default:n(()=>[y]),_:1}),f,i(o,{to:"/docs/concepts/collections/"},{default:n(()=>[g]),_:1}),v,i(o,{to:"/docs/concepts/fields/"},{default:n(()=>[M]),_:1}),b,O,w]),k,K,x,A,P,T,C,q,F,I,j,e("div",B,[D,e("p",null,[S,i(o,{to:"/docs/concepts/translations/#content-translations"},{default:n(()=>[U]),_:1}),R])]),J,N,E,V,W,e("div",Y,[H,e("p",null,[z,i(o,{to:"/docs/guides/collections/#sort"},{default:n(()=>[L]),_:1}),G])]),Q,X,e("p",null,[Z,i(o,{to:"/docs/guides/api-hooks"},{default:n(()=>[$]),_:1}),ee,i(o,{to:"/docs/guides/interfaces"},{default:n(()=>[te]),_:1}),ne]),oe,ie,ae,se])]),_:1})}}};export{he as default};
