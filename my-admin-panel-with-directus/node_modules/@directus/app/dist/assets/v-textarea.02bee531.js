import{r as a,p as d,q as o,w as r,B as l,P as e}from"./vendor.62143b15.js";const s=l("div",{class:"markdown-body"},[l("p",null,"Renders a textarea in which multiline text can be entered."),l("pre",null,[l("code",{class:"language-html"},[l("span",{class:"hljs-tag"},[e("<"),l("span",{class:"hljs-name"},"v-textarea"),e(),l("span",{class:"hljs-attr"},"v-model"),e("="),l("span",{class:"hljs-string"},'"value"'),e(" />")]),e(`
`)])]),l("h2",{id:"attributes-%26-events"},[e("Attributes & Events "),l("a",{class:"header-anchor",href:"#attributes-%26-events"},"#")]),l("p",null,[e("The HTML "),l("code",null,"<textarea>"),e(" element supports a huge amount of attributes and events. In order to support all of these, all props that aren\u2019t specially handled (see list below) will be passed on to the "),l("code",null,"<textarea>"),e(" element directly. This allows you to change anything you want on the input.")]),l("h2",{id:"reference"},[e("Reference "),l("a",{class:"header-anchor",href:"#reference"},"#")]),l("h4",{id:"props"},[e("Props "),l("a",{class:"header-anchor",href:"#props"},"#")]),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Prop"),l("th",null,"Description"),l("th",null,"Default"),l("th",null,"Type")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"placeholder")]),l("td",null,"Text to show when no input is entered"),l("td",null,[l("code",null,"null")]),l("td",null,[l("code",null,"String")])]),l("tr",null,[l("td",null,[l("code",null,"autofocus")]),l("td",null,"Autofocusses the input on render"),l("td",null,[l("code",null,"false")]),l("td",null,[l("code",null,"Boolean")])]),l("tr",null,[l("td",null,[l("code",null,"disabled")]),l("td",null,"Set the disabled state for the input"),l("td",null,[l("code",null,"false")]),l("td",null,[l("code",null,"Boolean")])]),l("tr",null,[l("td",null,[l("code",null,"full-width")]),l("td",null,"Render the input with 100% width"),l("td",null,[l("code",null,"true")]),l("td",null,[l("code",null,"Boolean")])]),l("tr",null,[l("td",null,[l("code",null,"value")]),l("td",null,[e("Current value. Syncs with "),l("code",null,"v-model")]),l("td",null,[l("code",null,"null")]),l("td",null,[l("code",null,"String")])]),l("tr",null,[l("td",null,[l("code",null,"expand-on-focus")]),l("td",null,"Renders the textarea at regular input size, and expands to max-height on focus"),l("td",null,[l("code",null,"false")]),l("td",null,[l("code",null,"Boolean")])]),l("tr",null,[l("td",null,[l("code",null,"trim")]),l("td",null,"Trim leading and trailing whitespace"),l("td",null,[l("code",null,"false")]),l("td",null,[l("code",null,"Boolean")])])])]),l("p",null,[e("Note: all other attached attributes are bound to the input HTMLElement in the component. This allows you to attach any of the standard HTML attributes like "),l("code",null,"min"),e(", "),l("code",null,"length"),e(", or "),l("code",null,"pattern"),e(".")]),l("h4",{id:"slots"},[e("Slots "),l("a",{class:"header-anchor",href:"#slots"},"#")]),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Slot"),l("th",null,"Description"),l("th",null,"Data")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"prepend")]),l("td",null,"Prepend elements before the text content in the textarea"),l("td")]),l("tr",null,[l("td",null,[l("code",null,"append")]),l("td",null,"Append elements after the text content"),l("td")])])]),l("h4",{id:"css-variables"},[e("CSS Variables "),l("a",{class:"header-anchor",href:"#css-variables"},"#")]),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Variable"),l("th",null,"Default")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"--v-textarea-min-height")]),l("td",null,[l("code",null,"none")])]),l("tr",null,[l("td",null,[l("code",null,"--v-textarea-max-height")]),l("td",null,[l("code",null,"var(--input-height-tall)")])]),l("tr",null,[l("td",null,[l("code",null,"--v-textarea-height")]),l("td",null,[l("code",null,"var(--input-height-tall)")])]),l("tr",null,[l("td",null,[l("code",null,"--v-textarea-font-family")]),l("td",null,[l("code",null,"var(--family-sans-serif)")])])])]),l("h4",{id:"events"},[e("Events "),l("a",{class:"header-anchor",href:"#events"},"#")]),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Event"),l("th",null,"Description"),l("th",null,"Value")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"input")]),l("td"),l("td")])])])],-1),f={setup(c,{expose:n}){const t={title:"Textarea",modularExtension:!1};return n({frontmatter:t}),(h,i)=>{const u=a("DocsWrapper");return d(),o(u,{frontmatter:t},{default:r(()=>[s]),_:1})}}};export{f as default};
